[tool.poetry]
name = "deeprecsys"
version = "0.2.5"
description = "deeprecsys is an open tool belt to speed up the development of modern data science projects at an enterprise level"
authors = ["Lucas Farris <lucas@farris.com.br>"]
license = "GPL-3.0-or-later"
readme = "README.md"
homepage = "https://deeprecsys.com"
repository = "https://github.com/luksfarris/deeprecsys"
documentation = "https://deeprecsys.com"
keywords = ["machinelearning", "reinforcementlearning", "recommmendersystems", "deeplearning", "datascience"]
classifiers = ["Topic :: Scientific/Engineering :: Artificial Intelligence"]

[[tool.poetry.source]]
name = "cputorch"
url = "https://download.pytorch.org/whl/cpu"
priority = "supplemental"


[tool.poetry.dependencies]
python = ">=3.9,<4"
pandas = "^2.2.2"
pyarrow = "^16.1.0"
torch = { version = "2.3.0+cpu", source = "cputorch", optional = true }
keras = { version = "^3.3.3", optional = true }
gymnasium = { version = "^0.29.1", optional = true }
tensorboard = {version = "^2.16.2", optional = true}
torchviz = {version = "^0.0.2", optional = true}
highway-env = {version = "^1.8.2", optional = true}
seaborn = "^0.13.2"


[tool.poetry.extras]
recsys = ["torch", "keras", "gymnasium", "tensorboard", "torchviz", "highway-env"]


[tool.poetry.group.dev.dependencies]
pre-commit = ">=2.20.0"
pytest = "^8.2.0"
coverage = { extras = ["toml"], version = "^7.5.1" }
pdoc3 = "^0.10.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["deeprecsys/tests"]
addopts = "--maxfail=2"

[tool.coverage.run]
omit = ['venv/*', 'tests/*']

[tool.coverage.report]
omit = ['venv/*']
exclude_lines = ['raise NotImplementedError', 'pass']


[tool.ruff]
lint.select = ["F", "E", "W", "C90", "I", "N", "D", "S"]
lint.ignore = ["D100", "D104", "D203", "D205", "D213", "D400", "D415"]
line-length = 120
indent-width = 4
target-version = "py311"

[tool.ruff.lint.mccabe]
max-complexity = 5

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101", "D103"]



